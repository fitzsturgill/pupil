function mcAcqMakeChannelPlots
    global state gh
    
    if ishandle(state.phys.mcAcq.mcFigure)
        clf(state.phys.mcAcq.mcFigure);
        set(state.phys.mcAcq.mcFigure, 'Visible', 'On');
    else
        state.phys.mcAcq.mcFigure = figure(...
            'doublebuffer', 'on',...
            'KeyPressFcn', 'mcFigureKeyPressFunction',...   % change later? or can I share with analysis package...
            'Tag', 'mcFigure',...
            'Name', 'mcFigure',...
            'MenuBar', 'figure',...
            'CloseRequestFcn', 'set(gcf, ''visible'', ''off'')'...
            );
    end
    validChannels=find(mcChannelFieldToVector('Show'));
    state.phys.mcAcq.displayedChannels = validChannels;
    nValidChannels = length(validChannels);
    gap=.005;
    start=.05;
    height = 1 - start*2;
    delta=(height-gap*(nValidChannels-1))/nValidChannels;    
    start = 1 - delta - start;
    

    state.phys.mcAcq.axes = zeros(1, nValidChannels) + -1;
    state.phys.mcAcq.lines = zeros(1, nValidChannels) + -1;
    state.phys.mcAcq.threshLines = zeros(1, nValidChannels) + -1; % do I need?  probably...
%     state.phys.mcAcq.respirationLines = zeros(1, nValidChannels) + -1; % do I need?

%     subplot(gh.mcFigure.figure1);
% Plot multichannel channels selected for display
    for i = 1:nValidChannels
        channel = validChannels(i);
%         state.mcViewer.axes(1, i) = subplot(state.mcViewer.nChannels, 1, i,...
        state.phys.mcAcq.axes(1, i) = axes(...
            'NextPlot', 'add',...
            'Parent', state.phys.mcAcq.mcFigure,...
            'Xtick', [],...
            'XTickLabel', {''}...
            );
%         startX = state.mcViewer.startX;
%         deltaX = 1/state.mcViewer.sampleRate;
%         endX = state.mcViewer.startX + deltaX * (size(state.mcViewer.displayData, 2)-1);
        state.phys.mcAcq.lines(1, i) = line(...
            state.phys.mcAcq.displayXData, ... % xdata scaled appropriately
            state.phys.mcAcq.displayData(:, channel),... % ydata FS MOD
            'Parent', state.phys.mcAcq.axes(1, i)...
            );
%         disp('fix threshLines in mcACqMakeChannelPlots');
%         if channel <= state.phys.mcAcq.mcNChannels
%             state.phys.mcAcq.threshLines(1, i) = line(...
%                 state.phys.mcAcq.displayXData, ... % xdata scaled appropriately
%                 state.phys.mcAcq.displayThreshData(:, channel),... % ydata FS MOD
%                 'Parent', state.phys.mcAcq.axes(1, i),...
%                 'Color', 'm',...
%                 'LineStyle', ':'...
%                 );
%         end
        set(state.phys.mcAcq.axes(1, i), ...
            'Xtick', [],...
            'XTickLabel', {''},...
            'Position', [.1 start - (i - 1) * (delta + gap) .8 delta]...
            );
%         get(state.mcViewer.axes(1, i), 'Position')
        ylabel(state.phys.mcAcq.axes(1, i), state.phys.mcAcq.channel(channel).Name);
        if i == nValidChannels
            set(state.phys.mcAcq.axes(1, i), 'XTickMode', 'auto', 'XTickLabelMode', 'auto');
        end        
    end
    
    mcAcqUpdateChannelPlots;  % ensures that filtering has taken place